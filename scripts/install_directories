#!/bin/bash
# Create directories from dotfiles.yaml

set -euo pipefail

# Colors for output
readonly BLUE='\033[0;34m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[0;33m'
readonly NC='\033[0m'

# Configuration
DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
readonly DOTFILES_DIR
CONFIG_FILE="$DOTFILES_DIR/dotfiles.yaml"
readonly CONFIG_FILE

# Options from environment or defaults
DRY_RUN="${DRY_RUN:-false}"
VERBOSE="${VERBOSE:-false}"

# Logging functions
log() { echo -e "${BLUE}[INFO]${NC}  $1"; }
success() { echo -e "${GREEN}[DONE]${NC}  $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC}  $1"; }
debug() { 
    if [[ $VERBOSE == true ]]; then 
        echo -e "${BLUE}[DEBUG]${NC} $1"
    fi
}

# Main function
main() {
    log "Creating directories..."

    # Use yq to parse directories from YAML
    debug "Reading directories from $CONFIG_FILE"
    local dirs
    dirs=$(yq eval '.directories[]' "$CONFIG_FILE" 2>/dev/null | sed "s|~|$HOME|g")

    local created=0
    local skipped=0
    local total=0

    if [[ -z "$dirs" ]]; then
        warn "No directories found in configuration"
        return
    fi

    while IFS= read -r dir; do
        if [[ -n "$dir" ]]; then
            total=$((total + 1))
            dir=$(eval echo "$dir")  # Expand variables
            if [[ ! -d "$dir" ]]; then
                if [[ $DRY_RUN == true ]]; then
                    log "[DRY RUN] Would create directory: $dir"
                else
                    log "Creating directory: $dir"
                    mkdir -p "$dir"
                    created=$((created + 1))
                fi
            else
                debug "Directory already exists: $dir"
                skipped=$((skipped + 1))
            fi
        fi
    done <<< "$dirs"

    if [[ $total -eq 0 ]]; then
        log "No directories to process"
    elif [[ $DRY_RUN == false ]]; then
        success "Directories created: $created new, $skipped already existed (total: $total)"
    else
        success "Directories checked: $total directories would be processed"
    fi
}

# Run if executed directly
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi